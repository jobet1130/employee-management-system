# Notification API Documentation

components:
  schemas:
    Notification:
      type: object
      required:
        - type
        - title
        - message
        - recipientId
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the notification
          example: 1
        type:
          type: string
          enum: [INFO, WARNING, ERROR, SUCCESS, REMINDER, APPROVAL]
          description: Type of the notification
          example: "INFO"
        title:
          type: string
          description: Title of the notification
          example: "New Leave Request"
        message:
          type: string
          description: Detailed message of the notification
          example: "You have a new leave request to review"
        isRead:
          type: boolean
          default: false
          description: Whether the notification has been read
        readAt:
          type: string
          format: date-time
          description: Timestamp when the notification was read
          example: "2023-01-01T12:00:00Z"
        senderId:
          type: integer
          format: int64
          nullable: true
          description: ID of the user who sent the notification
          example: 1
        recipientId:
          type: integer
          format: int64
          description: ID of the user who should receive the notification
          example: 2
        relatedEntity:
          type: string
          nullable: true
          description: Reference to related entity in format "EntityType:ID"
          example: "LeaveRequest:42"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the notification was created
          example: "2023-01-01T12:00:00Z"

    CreateNotificationRequest:
      type: object
      required:
        - type
        - title
        - message
        - recipientId
      properties:
        type:
          $ref: '#/components/schemas/Notification/properties/type'
        title:
          $ref: '#/components/schemas/Notification/properties/title'
        message:
          $ref: '#/components/schemas/Notification/properties/message'
        recipientId:
          $ref: '#/components/schemas/Notification/properties/recipientId'
        relatedEntity:
          $ref: '#/components/schemas/Notification/properties/relatedEntity'

    UpdateNotificationRequest:
      type: object
      properties:
        isRead:
          type: boolean
          description: Mark notification as read/unread
        readAt:
          type: string
          format: date-time
          description: Timestamp when the notification was read
          example: "2023-01-01T12:00:00Z"

    NotificationListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        meta:
          $ref: '#/components/schemas/Pagination'

    NotificationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Notification'

  parameters:
    notificationIdParam:
      name: id
      in: path
      description: Notification ID
      required: true
      schema:
        type: integer
        format: int64
      example: 1
    markAllAsReadQuery:
      name: markAllAsRead
      in: query
      description: Mark all notifications as read
      required: false
      schema:
        type: boolean
        default: false

  responses:
    NotificationListResponse:
      description: List of notifications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotificationListResponse'
    NotificationResponse:
      description: Single notification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotificationResponse'

paths:
  /api/notifications:
    get:
      tags: [Notifications]
      summary: Get user's notifications
      description: Retrieve a paginated list of notifications for the authenticated user
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/markAllAsReadQuery'
        - name: isRead
          in: query
          description: Filter by read status
          required: false
          schema:
            type: boolean
        - name: type
          in: query
          description: Filter by notification type
          required: false
          schema:
            type: string
            enum: [INFO, WARNING, ERROR, SUCCESS, REMINDER, APPROVAL]
      responses:
        200:
          $ref: '#/components/responses/NotificationListResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'
    
    post:
      tags: [Notifications]
      summary: Create a new notification
      description: Create a new notification (admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
      responses:
        201:
          $ref: '#/components/responses/NotificationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/ServerError'

  /api/notifications/{id}:
    get:
      tags: [Notifications]
      summary: Get notification by ID
      description: Retrieve a single notification by ID
      parameters:
        - $ref: '#/components/parameters/notificationIdParam'
      responses:
        200:
          $ref: '#/components/responses/NotificationResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    
    patch:
      tags: [Notifications]
      summary: Update a notification
      description: Update notification details (mark as read/unread)
      parameters:
        - $ref: '#/components/parameters/notificationIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
      responses:
        200:
          $ref: '#/components/responses/NotificationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    
    delete:
      tags: [Notifications]
      summary: Delete a notification
      description: Delete a notification (admin only)
      parameters:
        - $ref: '#/components/parameters/notificationIdParam'
      responses:
        204:
          description: Notification deleted successfully
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /api/notifications/read-all:
    post:
      tags: [Notifications]
      summary: Mark all notifications as read
      description: Mark all unread notifications as read for the authenticated user
      responses:
        200:
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "All notifications marked as read"
                  count:
                    type: integer
                    example: 5
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'